# Default values for levis_nginx.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# ... (existing content above 'service' section)

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP # CORRECT: Keep this as ClusterIP for Ingress to route to it.
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80 # IMPORTANT: Make sure your Nginx container is *actually* listening on this port. If you changed it to 4321, then put 4321 here. Standard Nginx is 80.

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  # IMPORTANT: Set this to the class name of your Ingress Controller
  # Use "alb" for AWS Load Balancer Controller
  # Use "nginx" for Nginx Ingress Controller
  className: "nginx" # <--- CHANGE THIS LINE (e.g., "alb" or "nginx")
  annotations:
    # IMPORTANT: Add these annotations for AWS Load Balancer Controller.
    # These tell the ALB Controller how to provision the AWS ALB.
    alb.ingress.kubernetes.io/scheme: internet-facing # Makes the ALB publicly accessible
    alb.ingress.kubernetes.io/target-type: ip # Routes traffic directly to pod IPs
    # Add other annotations here as needed. For example, for HTTPS/SSL with ACM:
    # alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    # alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:<REGION>:<ACCOUNT_ID>:certificate/<YOUR_ACM_CERT_ARN>
    # If using Nginx Ingress Controller, common annotations might include:
    # nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
    # IMPORTANT: Configure your hosts. For initial testing, you can use a wildcard.
    # For a real domain, replace "your-domain.com" with your actual domain.
    # You would then point your domain's CNAME record to the Ingress's ALB hostname.
    - host: "*" # <--- CHANGE THIS LINE for initial testing to accept any hostname
      # OR, if you have a specific domain:
      # - host: your-domain.com # e.g., "my-nginx-app.example.com"
      paths:
        - path: /
          pathType: Prefix # Or Exact, depending on your routing needs
  tls: []
  # If you want to enable HTTPS (TLS), uncomment and configure this section.
  # You'll need a Kubernetes Secret named 'chart-example-tls' (or whatever you name it)
  # in the 'levi' namespace, containing your SSL/TLS certificate and key.
  # Example:
  #  - secretName: my-nginx-tls-secret
  #    hosts:
  #      - your-domain.com # Must match the host configured above and certificate subject

# ... (rest of your values.yaml)
